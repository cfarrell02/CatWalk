function init(self)
	local types = {"redCar", "greenCar", "police"}
	local index = math.random(1,3)

	self.type = types[index]
	

	self.speed = 20

	self.maxY = 2000

	self.direction = "Right" 

	self.currentAnim = hash(self.type..self.direction)

	sprite.play_flipbook('#sprite', self.currentAnim)

	self.initialZ = go.get_position().z
	

end


function update(self, dt)
	if self.currentAnim ~= hash(self.type..self.direction) then
		self.currentAnim = hash(self.type..self.direction)
		sprite.play_flipbook('#sprite', self.currentAnim)
	end

	if self.direction == "Right" then
		go.set_position(go.get_position() + vmath.vector3(self.speed*dt,0,0))
	elseif self.direction == "Left" then
		go.set_position(go.get_position() + vmath.vector3(self.speed*dt,0,0))
	end

	--print(self.speed)

	-- Adjusting height of car so character looks infront when below and behind when above
	local currentPos = go.get_position()
	if(go.get_position("character").y > currentPos.y) then
		go.set_position(vmath.vector3(currentPos.x,currentPos.y,self.initialZ+.4))
	else
		go.set_position(vmath.vector3(currentPos.x,currentPos.y,self.initialZ))
	end
		
	
end



function on_message(self, message_id, message, sender)
	if message_id == hash("set_variables") then
		-- Check if the message contains the spawn location data
		if message.speed then
			self.speed = message.speed
		end
		if message.direction then
			self.direction = message.direction
			self.currentAnim = hash(self.type..self.direction)
			sprite.play_flipbook('#sprite', self.currentAnim)
		end
	end
end


function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end