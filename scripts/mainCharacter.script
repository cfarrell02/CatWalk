local speed = 150
local actualSpeed = speed
local isStuck = false 


function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post(".", "acquire_camera_focus")
	self.dir = vmath.vector3()
	self.current_anim = nil
	self.idleAnim = hash("down idle")

end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	if vmath.length_sqr(self.dir) > 1 then
		self.dir = vmath.normalize(self.dir)
	end
	local p = go.get_position()
	go.set_position(p + self.dir * speed * dt)

	-- animate the astronaut

	local anim = self.idleAnim
	

	if self.dir.x > 0 then
		anim = hash("right walk")
		self.idleAnim = hash("right idle")
	elseif self.dir.x < 0 then
		anim = hash("left walk")
		self.idleAnim = hash("left idle")
	elseif self.dir.y > 0 then
		anim = hash("up walk")
		self.idleAnim = hash("up idle")
	elseif self.dir.y < 0 then
		anim = hash("down walk")
		self.idleAnim = hash("down idle")
	end

	if anim ~= self.current_anim then
		msg.post("#sprite", "play_animation", { id = anim })
		self.current_anim = anim
	end

	-- done animating

	self.dir = vmath.vector3()
end

function on_message(self, message_id, message, sender)
	if message_id == hash("contact_point_response") then
		if message.group == hash("wall") then
			go.set_position(go.get_position() + message.normal * message.distance)
		end
	end
	if message_id == hash("collision_response") then
		if message.other_group == hash("enemy")then
			go.delete(message.other_id)
			msg.post("Level", "spawn")
		end	
	end
end

function on_input(self, action_id, action)



	if action_id == hash("down") then
		self.dir.y = -1
	elseif action_id == hash("up") then
		self.dir.y = 1
	elseif action_id == hash("left") then
		self.dir.x = -1
	elseif action_id == hash("right") then
		self.dir.x = 1
	end

	if action_id == hash("space") then
		if action.pressed then
			actualSpeed = speed * 2
		elseif action.released then
			actualSpeed = speed
		end
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end