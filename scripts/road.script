local carDriveLength = 550
local carSpeed = 80
local minCarSpawn = 0.8
local maxCarSpawn = 3

function init(self)
	self.carUrls = {}
	carSpeed = go.get_position().y * 0.15
	local currentPos = go.get_position()
	self.leftCar = vmath.vector3(currentPos.x - 250, currentPos.y - 5, 0.2)
	self.rightCar = vmath.vector3(currentPos.x + 320, currentPos.y - 30, 0.2)
	self.carCooldown = math.random(minCarSpawn, maxCarSpawn)
	self.isMovingRight = true
end

function update(self, dt)
	for i = #self.carUrls, 1, -1 do
		local carInfo = self.carUrls[i]
		local car = carInfo.carUrl
		local car_position = go.get_position(car)
		if isBeyondDriveLength(car_position, carInfo) then
			go.delete(car)
			table.remove(self.carUrls, i)
		end
	end

	if self.carCooldown <= 0 then
		if self.isMovingRight then
			spawn_car(self, "Right", self.leftCar, carDriveLength, carSpeed)
		else
			spawn_car(self, "Left", self.rightCar, carDriveLength, -carSpeed)
		end

		self.carCooldown = math.random(minCarSpawn, maxCarSpawn)
		self.isMovingRight = not self.isMovingRight
	end

	self.carCooldown = self.carCooldown - dt
end

function spawn_car(self, direction, spawnLocation, carDriveLength, speed)
	local car = factory.create("#factory", spawnLocation)
	local carInfo = { carUrl = car, spawnLocation = spawnLocation, carDriveLength = carDriveLength, carDirection = direction, carSpeed = speed }
	table.insert(self.carUrls, carInfo)
	msg.post(car, "set_variables", { speed = speed, direction = direction })
end

function isBeyondDriveLength(currentPosition, carInfo)
	if carInfo.carDirection == "Right" then
		return currentPosition.x > carInfo.spawnLocation.x + carInfo.carDriveLength
	elseif carInfo.carDirection == "Left" then
		return currentPosition.x < carInfo.spawnLocation.x - carInfo.carDriveLength
	end

	return false
end
