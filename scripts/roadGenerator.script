local totalRoadFactories = 5
local roadSegmentDistance = 112
local maxVisibleRoads = 10
local viewDistanceMultiplier = 4
local initialDespawned = false

function init(self)
	self.roadFactories = {}
	self.currentPosition = vmath.vector3(528, 467, 0)
	self.visibleRoads = {}

	for i = 1, totalRoadFactories do
		table.insert(self.roadFactories, "#road" .. i)
	end

	msg.post(".", "acquire_input_focus")

	-- Initial load of levels
	for i = 1, 8 do
		generateRoadSegment(self)
	end
end

function update(self, dt)
	if #self.visibleRoads > maxVisibleRoads then
		if not initialDespawned then
			go.delete("/Level")
			initialDespawned = true
		end
		go.delete(self.visibleRoads[1])
		table.remove(self.visibleRoads, 1)
	end

	local playerPosition = go.get_position("character")

	if self.currentPosition.y - playerPosition.y < roadSegmentDistance * viewDistanceMultiplier then
		generateRoadSegment(self)
	end
end

function generateRoadSegment(self)
	local randomIndex = math.random(1, totalRoadFactories)
	local factoryName = self.roadFactories[randomIndex]

	local roadSegment = factory.create(factoryName, self.currentPosition)
	self.currentPosition = vmath.vector3(self.currentPosition.x, self.currentPosition.y + roadSegmentDistance, self.currentPosition.z)
	table.insert(self.visibleRoads, roadSegment)
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Handle input if needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
